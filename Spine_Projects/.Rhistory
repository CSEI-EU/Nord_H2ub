cat("\014")
rm(list = ls())
graphics.off()
setwd("C:/Users/djh.eco/OneDrive - CBS - Copenhagen Business School/Documents/GitHub/Nord_H2ub/Spine_Projects")
source("~/GitHub/Nord_H2ub/spine_projects/03_output_data/02_runs_EURO/Comparison_file.R", echo=TRUE)
source("~/GitHub/Nord_H2ub/spine_projects/03_output_data/02_runs_EURO/Comparison_file.R", echo=TRUE)
View(base_case)
View(result)
View(result)
View(power_price_dk)
View(other_case)
library(dplyr)
source("~/GitHub/Nord_H2ub/spine_projects/03_output_data/02_runs_EURO/Comparison_file.R", echo=TRUE)
source("~/GitHub/Nord_H2ub/spine_projects/03_output_data/02_runs_EURO/Comparison_file.R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
# Hydrogen production
ggplot(data = df_comb_first_week, aes(x = time)) +
geom_line(aes(y = hydrogen_base, color = " Base"), linewidth = 0.75) +
geom_line(aes(y = hydrogen_other, color = "Constant"), linewidth = 0.75) +
labs(title = "Hydrogen Production",
x = "Time [01.01-08.01]",
y = "Value [MW]",
color = "Legend") +
theme_minimal()
### Plots
df_comb <- data.frame(time = result_base$X1,
base_energy_costs = result_base$Total_power_costs,
other_energy_costs = result_other$Total_power_costs,
hydrogen_base = result_base$Hydrogen_Kasso,
hydrogen_other = result_other$Hydrogen_Kasso,
hydrogen_storage_base = result_base$realisation,
hydrogen_storage_other = result_other$realisation)
start_date <- as.POSIXct("2019-7-01")
end_date <- start_date + days(7)
df_comb_first_week <- df_comb %>% filter(time >= start_date & time < end_date)
# Power costs
ggplot(data = df_comb_first_week, aes(x = time)) +
geom_line(aes(y = base_energy_costs, color = "Base"), linewidth = 0.75) +
geom_line(aes(y = other_energy_costs, color = "Constant"), linewidth = 0.75) +
labs(title = "Power Costs per Hour in First Week",
x = "Time",
y = "Value",
color = "Legend") +
theme_minimal()
# Hydrogen production
ggplot(data = df_comb_first_week, aes(x = time)) +
geom_line(aes(y = hydrogen_base, color = " Base"), linewidth = 0.75) +
geom_line(aes(y = hydrogen_other, color = "Constant"), linewidth = 0.75) +
labs(title = "Hydrogen Production",
x = "Time [01.01-08.01]",
y = "Value [MW]",
color = "Legend") +
theme_minimal()
# Storage level
ggplot(data = df_comb_first_week, aes(x = time)) +
geom_line(aes(y = hydrogen_storage_base, color = "Base"), linewidth = 0.75) +
geom_line(aes(y = hydrogen_storage_other, color = "Other"), linewidth = 0.75) +
labs(title = "Hydrogen Storage Level in First Week",
x = "Time",
y = "Value",
color = "Legend") +
theme_minimal()
### Plots
df_comb <- data.frame(time = result_base$X1,
base_energy_costs = result_base$Total_power_costs,
other_energy_costs = result_other$Total_power_costs,
hydrogen_base = result_base$Hydrogen_Kasso,
hydrogen_other = result_other$Hydrogen_Kasso,
hydrogen_storage_base = result_base$realisation,
hydrogen_storage_other = result_other$realisation)
start_date <- as.POSIXct("2019-6-01")
end_date <- start_date + days(7)
df_comb_first_week <- df_comb %>% filter(time >= start_date & time < end_date)
# Power costs
ggplot(data = df_comb_first_week, aes(x = time)) +
geom_line(aes(y = base_energy_costs, color = "Base"), linewidth = 0.75) +
geom_line(aes(y = other_energy_costs, color = "Constant"), linewidth = 0.75) +
labs(title = "Power Costs per Hour in First Week",
x = "Time",
y = "Value",
color = "Legend") +
theme_minimal()
# Hydrogen production
ggplot(data = df_comb_first_week, aes(x = time)) +
geom_line(aes(y = hydrogen_base, color = " Base"), linewidth = 0.75) +
geom_line(aes(y = hydrogen_other, color = "Constant"), linewidth = 0.75) +
labs(title = "Hydrogen Production",
x = "Time [01.01-08.01]",
y = "Value [MW]",
color = "Legend") +
theme_minimal()
# Storage level
ggplot(data = df_comb_first_week, aes(x = time)) +
geom_line(aes(y = hydrogen_storage_base, color = "Base"), linewidth = 0.75) +
geom_line(aes(y = hydrogen_storage_other, color = "Other"), linewidth = 0.75) +
labs(title = "Hydrogen Storage Level in First Week",
x = "Time",
y = "Value",
color = "Legend") +
theme_minimal()
### Plots
df_comb <- data.frame(time = result_base$X1,
base_energy_costs = result_base$Total_power_costs,
other_energy_costs = result_other$Total_power_costs,
hydrogen_base = result_base$Hydrogen_Kasso,
hydrogen_other = result_other$Hydrogen_Kasso,
hydrogen_storage_base = result_base$realisation,
hydrogen_storage_other = result_other$realisation)
start_date <- as.POSIXct("2019-8-01")
end_date <- start_date + days(7)
df_comb_first_week <- df_comb %>% filter(time >= start_date & time < end_date)
# Power costs
ggplot(data = df_comb_first_week, aes(x = time)) +
geom_line(aes(y = base_energy_costs, color = "Base"), linewidth = 0.75) +
geom_line(aes(y = other_energy_costs, color = "Constant"), linewidth = 0.75) +
labs(title = "Power Costs per Hour in First Week",
x = "Time",
y = "Value",
color = "Legend") +
theme_minimal()
# Hydrogen production
ggplot(data = df_comb_first_week, aes(x = time)) +
geom_line(aes(y = hydrogen_base, color = " Base"), linewidth = 0.75) +
geom_line(aes(y = hydrogen_other, color = "Constant"), linewidth = 0.75) +
labs(title = "Hydrogen Production",
x = "Time [01.01-08.01]",
y = "Value [MW]",
color = "Legend") +
theme_minimal()
# Storage level
ggplot(data = df_comb_first_week, aes(x = time)) +
geom_line(aes(y = hydrogen_storage_base, color = "Base"), linewidth = 0.75) +
geom_line(aes(y = hydrogen_storage_other, color = "Other"), linewidth = 0.75) +
labs(title = "Hydrogen Storage Level in First Week",
x = "Time",
y = "Value",
color = "Legend") +
theme_minimal()
### Plots
df_comb <- data.frame(time = result_base$X1,
base_energy_costs = result_base$Total_power_costs,
other_energy_costs = result_other$Total_power_costs,
hydrogen_base = result_base$Hydrogen_Kasso,
hydrogen_other = result_other$Hydrogen_Kasso,
hydrogen_storage_base = result_base$realisation,
hydrogen_storage_other = result_other$realisation)
start_date <- as.POSIXct("2019-6-14")
end_date <- start_date + days(7)
df_comb_first_week <- df_comb %>% filter(time >= start_date & time < end_date)
# Power costs
ggplot(data = df_comb_first_week, aes(x = time)) +
geom_line(aes(y = base_energy_costs, color = "Base"), linewidth = 0.75) +
geom_line(aes(y = other_energy_costs, color = "Constant"), linewidth = 0.75) +
labs(title = "Power Costs per Hour in First Week",
x = "Time",
y = "Value",
color = "Legend") +
theme_minimal()
# Hydrogen production
ggplot(data = df_comb_first_week, aes(x = time)) +
geom_line(aes(y = hydrogen_base, color = " Base"), linewidth = 0.75) +
geom_line(aes(y = hydrogen_other, color = "Constant"), linewidth = 0.75) +
labs(title = "Hydrogen Production",
x = "Time [01.01-08.01]",
y = "Value [MW]",
color = "Legend") +
theme_minimal()
# Storage level
ggplot(data = df_comb_first_week, aes(x = time)) +
geom_line(aes(y = hydrogen_storage_base, color = "Base"), linewidth = 0.75) +
geom_line(aes(y = hydrogen_storage_other, color = "Other"), linewidth = 0.75) +
labs(title = "Hydrogen Storage Level in First Week",
x = "Time",
y = "Value",
color = "Legend") +
theme_minimal()
### Plots
df_comb <- data.frame(time = result_base$X1,
base_energy_costs = result_base$Total_power_costs,
other_energy_costs = result_other$Total_power_costs,
hydrogen_base = result_base$Hydrogen_Kasso,
hydrogen_other = result_other$Hydrogen_Kasso,
hydrogen_storage_base = result_base$realisation,
hydrogen_storage_other = result_other$realisation)
start_date <- as.POSIXct("2019-6-16")
end_date <- start_date + days(3)
df_comb_first_week <- df_comb %>% filter(time >= start_date & time < end_date)
# Power costs
ggplot(data = df_comb_first_week, aes(x = time)) +
geom_line(aes(y = base_energy_costs, color = "Base"), linewidth = 0.75) +
geom_line(aes(y = other_energy_costs, color = "Constant"), linewidth = 0.75) +
labs(title = "Power Costs per Hour in First Week",
x = "Time",
y = "Value",
color = "Legend") +
theme_minimal()
# Hydrogen production
ggplot(data = df_comb_first_week, aes(x = time)) +
geom_line(aes(y = hydrogen_base, color = " Base"), linewidth = 0.75) +
geom_line(aes(y = hydrogen_other, color = "Constant"), linewidth = 0.75) +
labs(title = "Hydrogen Production",
x = "Time [01.01-08.01]",
y = "Value [MW]",
color = "Legend") +
theme_minimal()
# Storage level
ggplot(data = df_comb_first_week, aes(x = time)) +
geom_line(aes(y = hydrogen_storage_base, color = "Base"), linewidth = 0.75) +
geom_line(aes(y = hydrogen_storage_other, color = "Other"), linewidth = 0.75) +
labs(title = "Hydrogen Storage Level in First Week",
x = "Time",
y = "Value",
color = "Legend") +
theme_minimal()
### Plots
df_comb <- data.frame(time = result_base$X1,
base_energy_costs = result_base$Total_power_costs,
other_energy_costs = result_other$Total_power_costs,
hydrogen_base = result_base$Hydrogen_Kasso,
hydrogen_other = result_other$Hydrogen_Kasso,
hydrogen_storage_base = result_base$realisation,
hydrogen_storage_other = result_other$realisation)
start_date <- as.POSIXct("2019-6-24")
end_date <- start_date + days(7)
df_comb_first_week <- df_comb %>% filter(time >= start_date & time < end_date)
# Power costs
ggplot(data = df_comb_first_week, aes(x = time)) +
geom_line(aes(y = base_energy_costs, color = "Base"), linewidth = 0.75) +
geom_line(aes(y = other_energy_costs, color = "Constant"), linewidth = 0.75) +
labs(title = "Power Costs per Hour in First Week",
x = "Time",
y = "Value",
color = "Legend") +
theme_minimal()
# Hydrogen production
ggplot(data = df_comb_first_week, aes(x = time)) +
geom_line(aes(y = hydrogen_base, color = " Base"), linewidth = 0.75) +
geom_line(aes(y = hydrogen_other, color = "Constant"), linewidth = 0.75) +
labs(title = "Hydrogen Production",
x = "Time [01.01-08.01]",
y = "Value [MW]",
color = "Legend") +
theme_minimal()
# Storage level
ggplot(data = df_comb_first_week, aes(x = time)) +
geom_line(aes(y = hydrogen_storage_base, color = "Base"), linewidth = 0.75) +
geom_line(aes(y = hydrogen_storage_other, color = "Other"), linewidth = 0.75) +
labs(title = "Hydrogen Storage Level in First Week",
x = "Time",
y = "Value",
color = "Legend") +
theme_minimal()
### Plots
df_comb <- data.frame(time = result_base$X1,
base_energy_costs = result_base$Total_power_costs,
other_energy_costs = result_other$Total_power_costs,
hydrogen_base = result_base$Hydrogen_Kasso,
hydrogen_other = result_other$Hydrogen_Kasso,
hydrogen_storage_base = result_base$realisation,
hydrogen_storage_other = result_other$realisation)
start_date <- as.POSIXct("2019-6-24")
end_date <- start_date + days(7)
df_comb_first_week <- df_comb %>% filter(time >= start_date & time < end_date)
# Power costs
ggplot(data = df_comb_first_week, aes(x = time)) +
geom_line(aes(y = base_energy_costs, color = "Base"), linewidth = 0.75) +
geom_line(aes(y = other_energy_costs, color = "Constant"), linewidth = 0.75) +
labs(title = "Power Costs per Hour in First Week",
x = "Time",
y = "Value",
color = "Legend") +
theme_minimal()
# Hydrogen production
ggplot(data = df_comb_first_week, aes(x = time)) +
geom_line(aes(y = hydrogen_base, color = " Base"), linewidth = 0.75) +
geom_line(aes(y = hydrogen_other, color = "Constant"), linewidth = 0.75) +
labs(title = "Hydrogen Production",
x = "Time",
y = "Value [MW]",
color = "Legend") +
theme_minimal()
# Storage level
ggplot(data = df_comb_first_week, aes(x = time)) +
geom_line(aes(y = hydrogen_storage_base, color = "Base"), linewidth = 0.75) +
geom_line(aes(y = hydrogen_storage_other, color = "Other"), linewidth = 0.75) +
labs(title = "Hydrogen Storage Level in First Week",
x = "Time",
y = "Value",
color = "Legend") +
theme_minimal()
